{"version":3,"sources":["features/utils.js","components/BirthdayList.jsx","components/Employee.jsx","components/EmployeesList.jsx","App.js","features/api.js","index.js"],"names":["alphabet","map","item","toUpperCase","monthNames","sortByLastName","a","b","lastName","getItemsFromLocalStorage","key","defaultValue","localStorage","getItem","JSON","parse","BirthdayList","prop","sortedSelectedEmployees","obj","currentMonth","Date","getMonth","employeesBirthdayMonthes","Object","keys","sort","previousMonthes","filter","console","log","postMonthes","reduce","acc","sortByMonth","selectedEmployees","className","length","entries","employee","idx","month","items","birthday","dob","birthdayString","getDate","toLocaleString","getFullYear","firstName","id","proptypes","PropTypes","object","isRequired","Employee","addEmployee","removeEmployee","useState","active","setActive","useEffect","setItem","removeItem","type","name","value","checked","onChange","htmlFor","func","EmployeesList","employees","addSelectedEmployee","removeSelectedEmployee","letter","App","setEmployees","setSelectedEmployees","loading","setLoading","axios","get","then","employeesArr","data","firstLetter","slice","push","orderedValues","getSortedEmployees","catch","err","Error","stringify","arr","sortSelectedEmployees","updatedEmployees","newObj","forEach","removeEmptyKeys","ReactDOM","render","StrictMode","path","to","document","getElementById"],"mappings":"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","file":"static/js/main.cd8d6d96.chunk.js","sourcesContent":["export const alphabet = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n].map((item) => item.toUpperCase());\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nexport const sortByLastName = (a, b) => {\n  if (a.lastName > b.lastName) {\n    return 1;\n  }\n  if (a.lastName < b.lastName) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const getItemsFromLocalStorage = (key, defaultValue = {}) => {\n  return localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : defaultValue;\n};\n\nexport const removeEmptyKeys = (obj) => {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (obj[key].length) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n};\n\nexport const sortByMonth = (obj) => {\n  const currentMonth = new Date().getMonth();\n  const employeesBirthdayMonthes = Object.keys(obj).sort((a, b) => a - b);\n  const previousMonthes = employeesBirthdayMonthes.filter((item) => +item < +currentMonth);\n  console.log(previousMonthes);\n  const postMonthes = employeesBirthdayMonthes.filter((item) => +item >= +currentMonth);\n  console.log(postMonthes);\n  console.log([...postMonthes, ...previousMonthes]);\n\n  const result = [...postMonthes, ...previousMonthes].reduce((acc, item) => {\n    const month = monthNames[item];\n    acc[month] = obj[item] || [];\n\n    return acc;\n  }, {});\n  return result;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { sortByMonth } from \"../features/utils\";\n\nexport const BirthdayList = (prop) => {\n  const { selectedEmployees } = prop;\n  const sortedSelectedEmployees = sortByMonth(selectedEmployees);\n  return (\n    <section className=\"emloyees-birhday\">\n      <h2 className=\"emloyees-birhday__title\">Employees birthday</h2>\n      <div className=\"employees-birthday__wrapper\">\n        {Object.keys(sortedSelectedEmployees).length > 0 ? (\n          Object.entries(sortedSelectedEmployees).map((employee, idx) => {\n            const [month, items] = employee;\n            return (\n              <section key={idx}>\n                {sortedSelectedEmployees[month].length > 0 && <h4>{month}</h4>}\n                <ul>\n                  {items &&\n                    items.map((item) => {\n                      const birthday = new Date(item.dob);\n                      const birthdayString = `${birthday.getDate()} ${birthday.toLocaleString(\n                        \"en-GB\",\n                        { month: \"long\" }\n                      )}, ${birthday.getFullYear()} year`;\n                      return (\n                        <li key={`${item.id}-${idx}`}>\n                          {item.lastName} {item.firstName} {birthdayString}\n                        </li>\n                      );\n                    })}\n                </ul>\n              </section>\n            );\n          })\n        ) : (\n          <h3>Employees List is empty</h3>\n        )}\n      </div>\n    </section>\n  );\n};\n\nBirthdayList.proptypes = {\n  selectedEmployees: PropTypes.object.isRequired\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { getItemsFromLocalStorage } from \"../features/utils\";\n\nexport const Employee = (prop) => {\n  const { employee, addEmployee, removeEmployee } = prop;\n  const [active, setActive] = useState(getItemsFromLocalStorage(employee.id, false));\n\n  useEffect(() => {\n    if (active) {\n      localStorage.setItem(employee.id, true);\n    } else {\n      localStorage.removeItem(employee.id);\n    }\n  }, [active]);\n\n  return (\n    <div className=\"employee-content\">\n      <h4 className={`employee-name ${active ? \"active\" : \"\"}`}>\n        {employee.lastName} {employee.firstName}\n      </h4>\n      <div className=\"btn-group\">\n        <div className=\"not-active-wrapper\">\n          <input\n            type=\"radio\"\n            name={employee.firstName}\n            id={`${employee.id}-not-active`}\n            value={false}\n            checked={!active}\n            onChange={() => {\n              setActive(false);\n              removeEmployee(employee);\n            }}\n          />\n          <label htmlFor={`${employee.id}-not-active`}>not active</label>\n        </div>\n        <div className=\"active-wrapper\">\n          <input\n            type=\"radio\"\n            name={employee.firstName}\n            id={`${employee.id}-active`}\n            value={true}\n            checked={active}\n            onChange={() => {\n              setActive(true);\n              addEmployee(employee);\n            }}\n          />\n          <label htmlFor={`${employee.id}-active`}>active</label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEmployee.proptypes = {\n  employee: PropTypes.object.isRequired,\n  addEmployee: PropTypes.func.isRequired,\n  removeEmployee: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Employee } from \"./Employee\";\n\nexport const EmployeesList = (prop) => {\n  const { employees, addSelectedEmployee, removeSelectedEmployee } = prop;\n  return (\n    <section className=\"employees\">\n      <h2 className=\"employees-title\">Employees</h2>\n      <div className=\"employees-wrapper\">\n        {Object.entries(employees).map((employee, idx) => {\n          const [letter, items] = employee;\n          return (\n            <div key={idx} className=\"employee-wrapper\">\n              <h3>{letter}</h3>\n              {items.length > 0\n                ? items.map((item) => (\n                    <Employee\n                      key={item.id}\n                      employee={item}\n                      addEmployee={addSelectedEmployee}\n                      removeEmployee={removeSelectedEmployee}\n                    />\n                  ))\n                : \"----\"}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nEmployeesList.proptypes = {\n  employees: PropTypes.object.isRequired,\n  addSelectedEmployee: PropTypes.func.isRequired,\n  removeSelectedEmployee: PropTypes.func.isRequired\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BirthdayList } from \"./components/BirthdayList\";\nimport { EmployeesList } from \"./components/EmployeesList\";\n\nimport {\n  alphabet,\n  sortByLastName,\n  getItemsFromLocalStorage,\n  removeEmptyKeys\n} from \"./features/utils\";\nimport { getEmployees } from \"./features/api\";\n\nfunction App() {\n  const [employees, setEmployees] = useState({});\n  const [selectedEmployees, setSelectedEmployees] = useState(\n    getItemsFromLocalStorage(\"selectedEmployees\")\n  );\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getEmployees()\n      .then(({ data }) => {\n        const employeesArr = data.reduce((acc, item) => {\n          const firstLetter = item.lastName.slice(0, 1);\n          if (acc[firstLetter]) {\n            acc[firstLetter].push(item);\n          } else {\n            acc[firstLetter] = [item];\n          }\n          return acc;\n        }, {});\n        setEmployees(getSortedEmployees(employeesArr));\n        setLoading(false);\n      })\n      .catch((err) => {\n        throw new Error(err);\n      });\n  }, []);\n\n  function getSortedEmployees(employees) {\n    const orderedValues = Object.entries(employees).reduce((acc, item) => {\n      const values = item[1];\n      values.sort(sortByLastName);\n      return acc;\n    }, employees);\n\n    const result = alphabet.sort().reduce((acc, item) => {\n      acc[item] = orderedValues[item] || [];\n      return acc;\n    }, {});\n\n    return result;\n  }\n\n  function sortSelectedEmployees(arr, employee) {\n    const newArr = [...arr, employee];\n    return newArr.sort(sortByLastName);\n  }\n\n  function addSelectedEmployee(employee) {\n    const month = new Date(employee.dob).getMonth();\n    const selectedEmployees = getItemsFromLocalStorage(\"selectedEmployees\");\n    if (selectedEmployees[month]) {\n      localStorage.setItem(\n        \"selectedEmployees\",\n        JSON.stringify({\n          ...selectedEmployees,\n          [month]: sortSelectedEmployees(selectedEmployees[month], employee)\n        })\n      );\n    } else {\n      localStorage.setItem(\n        \"selectedEmployees\",\n        JSON.stringify({\n          ...selectedEmployees,\n          [month]: [employee]\n        })\n      );\n    }\n    setSelectedEmployees(getItemsFromLocalStorage(\"selectedEmployees\"));\n  }\n\n  function removeSelectedEmployee(employee) {\n    const month = new Date(employee.dob).getMonth();\n    const selectedEmployees = getItemsFromLocalStorage(\"selectedEmployees\");\n    const updatedEmployees = {\n      ...selectedEmployees,\n      [month]: selectedEmployees[month].filter((item) => item.id !== employee.id)\n    };\n    localStorage.setItem(\"selectedEmployees\", JSON.stringify(removeEmptyKeys(updatedEmployees)));\n    setSelectedEmployees(getItemsFromLocalStorage(\"selectedEmployees\"));\n  }\n\n  return (\n    <div className=\"app\">\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : (\n        <>\n          <EmployeesList\n            employees={employees}\n            addSelectedEmployee={addSelectedEmployee}\n            removeSelectedEmployee={removeSelectedEmployee}\n          />\n          <BirthdayList selectedEmployees={selectedEmployees} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nconst URL = `https://yalantis-react-school-api.yalantis.com/api/task0/users`;\nexport const getEmployees = () => axios.get(URL);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/employees\">\n        <App />\n      </Route>\n      <Redirect to=\"/employees\" />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}